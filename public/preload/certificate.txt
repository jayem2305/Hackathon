<!-- certificate.html -->
<ul class="nav nav-tabs" id="tabMenu" role="tablist">
  <li class="nav-item" role="presentation">
    <button
      class="nav-link active"
      id="tab1-tab"
      data-bs-toggle="tab"
      data-bs-target="#tab1"
      type="button"
      role="tab"
    >
      Tab 1
    </button>
  </li>
  <li class="nav-item" role="presentation">
    <button
      class="nav-link"
      id="tab2-tab"
      data-bs-toggle="tab"
      data-bs-target="#tab2"
      type="button"
      role="tab"
    >
      Tab 2
    </button>
  </li>
  <li class="nav-item" role="presentation">
    <button
      class="nav-link"
      id="tab3-tab"
      data-bs-toggle="tab"
      data-bs-target="#tab3"
      type="button"
      role="tab"
    >
      Tab 3
    </button>
  </li>
</ul>

<!-- Tab content containers -->
<div class="tab-content mt-3">
  <div class="tab-pane fade show active" id="tab1" role="tabpanel"></div>
  <div class="tab-pane fade" id="tab2" role="tabpanel"></div>
  <div class="tab-pane fade" id="tab3" role="tabpanel"></div>
</div>

<script>
  // Mapping tab IDs to HTML file URLs
  const tabContentMap = {
    tab1: "tab1.html",
    tab2: "tab2.html",
    tab3: "tab3.html",
  };

  document.querySelectorAll(".nav-link").forEach((tab) => {
    tab.addEventListener("shown.bs.tab", function (e) {
      const targetId = e.target.getAttribute("data-bs-target").substring(1);
      const targetDiv = document.getElementById(targetId);
      const url = tabContentMap[targetId];

      fetch(url)
        .then((response) => response.text())
        .then((html) => {
          targetDiv.innerHTML = html;
        })
        .catch((err) => {
          targetDiv.innerHTML = `<p class="text-danger">Failed to load content.</p>`;
        });
    });
  });

  // Load content for the initially active tab
  window.addEventListener("DOMContentLoaded", () => {
    const activeTab = document.querySelector(".nav-link.active");
    if (activeTab) {
      activeTab.dispatchEvent(
        new CustomEvent("shown.bs.tab", { bubbles: true, cancelable: true })
      );
    }
  });
</script>
